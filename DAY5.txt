
class Movie {

constructor(title, studio, rating = “PG”) {

this.title = title;

this.studio = studio;

this.rating = rating;

}

static getPG(movies) {

return movies.filter(movie => movie.rating === “PG”);

}

}

const nanban = new Movie(“nanban”, “leo”, “PG-13”);

console.log(“Title:”, nanban.title);

console.log(“Studio:”, nanban.studio);

console.log(“Rating:”, nanban.rating);

const moviesArray = [

new Movie(“Movie1”, “Studio1”, “PG”),

new Movie(“Movie2”, “Studio2”, “PG-13”),

new Movie(“Movie3”, “Studio3”, “R”),

];

const pgMovies = Movie.getPG(moviesArray);

console.log(“PG Rated Movies:”);

pgMovies.forEach(movie => {

console.log(“Title:”, movie.title, “| Studio:”, movie.studio, “| Rating:”, movie.rating);

});

class Person {

constructor(name, age, occupation) {

this.name = name;

this.age = age;

this.occupation = occupation;

}

}

const person = new Person(“vdya”, 27, “Software Engineer”);

console.log(“Name:”, person.name);

console.log(“Age:”, person.age);

console.log(“Occupation:”, person.occupation);

Qn:2

Circle
-radius: double = 1.0
-color: String = “red”
+Circle()
+Circle (radius:double)
+Circle (radius: double, color:String)
+getRadius(): double
+setRadius (radius: double):void
+getColor ():String
+setColor (color: String): void
+toString():String “Circle[radius =?, color =?]”
+getArea (): double
+getCircumference(): double

write a class to calculate the uber price.

Code:

class UberPriceCalculator {

static BASE_FARE = 2.0;

static PER_MILE_RATE = 1.5;

static PER_MINUTE_RATE = 0.5;

constructor(distance, duration) {

this.distance = distance;

this.duration = duration;

}

calculateFare() {

const distanceFare = this.distance * UberPriceCalculator.PER_MILE_RATE;

const timeFare = this.duration * UberPriceCalculator.PER_MINUTE_RATE;

const totalFare = UberPriceCalculator.BASE_FARE + distanceFare + timeFare;

return totalFare;

}

getDistance() {

return this.distance;

}

setDistance(distance) {

this.distance = distance;

}

getDuration() {

return this.duration;

}

setDuration(duration) {

this.duration = duration;

}

toString() {

return `UberPriceCalculator[distance=${this.distance.toFixed(2)} miles, duration=${this.duration} minutes]`;

}

}

const calculator = new UberPriceCalculator(6.5, 15);

console.log(calculator.toString());

const fare = calculator.calculateFare();

console.log(`Total Fare: $${fare.toFixed(2)}`);





